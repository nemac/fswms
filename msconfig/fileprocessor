#! /usr/bin/python

import os,subprocess,re,shutil;
from datetime import datetime, date, timedelta;

try:
    from Config import *
except:
    print "Cannot find local settings file 'Config.py'.  You need to create a Config.py file that contains"
    print "settings appropriate for this copy of the FSWMS project.  You can use the file 'Config.py.template'"
    print "as a starting point --- make a copy of that file called 'Config.py', and edit appropriately."
    exit(-1)

standardPattern = '(' + DATA_DIR + r'/.+/.+/)(\d+)_(\d+)\.(t[a-z][a-z])$'
retroPattern    =       DATA_DIR + r'/.+/.+/(.+)/(\d+)_(\d+)_\d+\.(t[a-z][a-z])$'
retroFolderPattern = r'x_fcav_retro_viewer_(.+)_bl'

timeprefixes = ['current','previous1','previous2']

def rfind(dir, pattern):
    return subprocess.Popen(['find', dir, '-name', pattern, '-print'], stdout=subprocess.PIPE).communicate()[0].split('\n')

def currentTifs(dir, filePattern):
    tifs = []
    for line in rfind(dir, '*.tif'):
        if (len(line) > 0) and (re.search(filePattern, line) != None):
            tifs.append(line)
    tifs.sort()
    current = [tifs[-1], tifs[-2], tifs[-3]]
    return current

def copyFile(i, file, destdir, whichPattern):
    destname = compute_stupid_filename(i, file, whichPattern)
    destpath = destdir + "/" + destname
    if os.path.exists(destpath):
        os.remove(destpath)
    os.symlink(file, destpath)

def compute_stupid_filename(i, smart_filename, whichPattern):
    if whichPattern == 'standard':
    	m = re.search(standardPattern, smart_filename)
    	prefix = m.group(1)
	yyyymmdd = m.group(2)
	pp = int(m.group(3))
	suffix = m.group(4)
    else:
        m = re.search(retroPattern, smart_filename)
        prefix = m.group(1)
	t = re.search(retroFolderPattern, prefix)
	retroPrefix = t.group(1)
        yyyymmdd = m.group(2)
        pp = int(m.group(3))
        suffix = m.group(4)	

    end = datetime.strptime(yyyymmdd,"%Y%m%d")
    endy = int(end.strftime("%Y"))
    endm = int(end.strftime("%m"))
    endd = int(end.strftime("%d"))
    enddate = date(endy, endm, endd)
    delta = timedelta(days=pp-1)
    start = enddate - delta
    stupidend = end.strftime("%B").lower() + ("%1d" % (int(end.strftime("%d"))))
    stupidstart = start.strftime("%B").lower() + ("%1d" % (int(start.strftime("%d"))))
    endform = "%s_%s.%s" % (stupidstart, stupidend, suffix)

    return timeprefixes[i] + "_" + endform
  
#    if whichPattern == 'standard':
#    	return timeprefixes[i] + "_" + endform
#    else:
#    	return retroPrefix + "_" + timeprefixes[i] + "_" + endform

def ensureDir(dir):
    if not os.path.exists(dir):
        os.mkdir(dir)

def do_link_group(group_link_dir, group_data_dir, whichPattern):
    os.system("/bin/rm -f %s/*" % group_link_dir);
    ensureDir(group_link_dir)
    if whichPattern == 'standard':
    	filePattern = standardPattern
    else:
	filePattern = retroPattern
    tifs = currentTifs(group_data_dir, filePattern)
    for i in range(0,len(tifs)):
        copyFile(i, tifs[i], group_link_dir, whichPattern)
        tfw = re.sub(r'\.tif$', '.tfw', tifs[i])
        copyFile(i, tfw, group_link_dir, whichPattern)

ensureDir(LINK_TARGET_DIR)
ensureDir(LINK_TARGET_DIR + "/efetac_nasa-retro")

do_link_group("%s/rsac_fhtet" % LINK_TARGET_DIR,  "%s/rsac_fhtet/ews" % DATA_DIR, 'standard')
do_link_group("%s/efetac_nasa" % LINK_TARGET_DIR,  "%s/efetac_nasa/ews" % DATA_DIR, 'standard')

#Retro: 1 yr
do_link_group("%s/efetac_nasa-retro/1YrBaseline" % LINK_TARGET_DIR,  "%s/efetac_nasa/ews/x_fcav_retro_viewer_2010_vs_2009_bl" % DATA_DIR, 'retro')

#Retro: 3 yrs
do_link_group("%s/efetac_nasa-retro/3YrBaseline" % LINK_TARGET_DIR,  "%s/efetac_nasa/ews/x_fcav_retro_viewer_2010_vs_2007-2009_bl" % DATA_DIR, 'retro')

#Retro: All yrs
do_link_group("%s/efetac_nasa-retro/AllYrBaseline" % LINK_TARGET_DIR,  "%s/efetac_nasa/ews/x_fcav_retro_viewer_2010_vs_2003-2009_bl" % DATA_DIR, 'retro')

